# vim:fileencoding=utf-8:ft=conf:foldmethod=marker

#                                 ▄▀▄     ▄▀▄
#                                ▄█░░▀▀▀▀▀░░█▄
#                            ▄▄  █░░░░░░░░░░░█  ▄▄
#                           █▄▄█ █░░▀░░┬░░▀░░█ █▄▄█
#                        ─────────────────────────────
#                        ░█░█░░░▀█▀░░░▀█▀░░░▀█▀░░░█░█░
#                        ░█▀▄░░░░█░░░░░█░░░░░█░░░░░█░░
#                        ░▀░▀░░░▀▀▀░░░░▀░░░░░▀░░░░░▀░░
#                        ─────────────────────────────


include bindings.conf
include ${KITTY_OS}.conf


# ┏━╸┏━┓┏┓╻╺┳╸┏━┓
# ┣╸ ┃ ┃┃┗┫ ┃ ┗━┓
# ╹  ┗━┛╹ ╹ ╹ ┗━┛
# Fonts {{{

# kitty has very powerful font management. You can configure individual font
# faces and even specify special fonts for particular characters.

# You can specify different fonts for the bold/italic/bold-italic variants. By
# default they are derived automatically, by the OSes font system. Setting them
# manually is useful for font families that have many weight variants like Book,
# Medium, Thick, etc. For example:

font_family      JetBrains Mono ExtraLight
bold_font        JetBrains Mono Medium
italic_font      JetBrains Mono ExtraLight Italic
bold_italic_font JetBrains Mono Medium Italic

# Change the size of each character cell kitty renders. You can use either
# numbers, which are interpreted as pixels or percentages (number followed by
# %), which are interpreted as percentages of the unmodified values. You can use
# negative pixels or percentages less than 100% to reduce sizes (but this might
# cause rendering artifacts).
adjust_line_height  0
adjust_column_width 0

# symbol_map U+E0A0-U+E0A2,U+E0B0-U+E0B3 PowerlineSymbols

# Map the specified unicode codepoints to a particular font. Useful if you need
# special rendering for some symbols, such as for Powerline. Avoids the need for
# patched fonts. Each unicode code point is specified in the form U+<code point
# in hexadecimal>. You can specify multiple code points, separated by commas and
# ranges separated by hyphens. symbol_map itself can be specified multiple
# times. Syntax is:

#     symbol_map codepoints Font Family Name

# Change the sizes of the lines used for the box drawing unicode characters
# These values are in pts. They will be scaled by the monitor DPI to arrive at a
# pixel value. There must be four values corresponding to thin, normal, thick,
# and very thick lines.
box_drawing_scale 0.001, 1, 1.5, 2

# }}}


# ┏━╸╻ ╻┏━┓┏━┓┏━┓┏━┓   ┏━╸╻ ╻┏━┓╺┳╸┏━┓┏┳┓╻╺━┓┏━┓╺┳╸╻┏━┓┏┓╻
# ┃  ┃ ┃┣┳┛┗━┓┃ ┃┣┳┛   ┃  ┃ ┃┗━┓ ┃ ┃ ┃┃┃┃┃┏━┛┣━┫ ┃ ┃┃ ┃┃┗┫
# ┗━╸┗━┛╹┗╸┗━┛┗━┛╹┗╸   ┗━╸┗━┛┗━┛ ╹ ┗━┛╹ ╹╹┗━╸╹ ╹ ╹ ╹┗━┛╹ ╹
# Cursor customization {{{

# Default cursor color
cursor #e8c73e

# Choose the color of text under the cursor. If you want it rendered with the
# background color of the cell underneath instead, use the special keyword:
# background
cursor_text_color #111111

# The cursor shape can be one of (block, beam, underline)
cursor_shape underline

# The interval (in seconds) at which to blink the cursor. Set to zero to disable
# blinking. Note that numbers smaller than repaint_delay will be limited to
# repaint_delay. Stop blinking cursor after the specified number of seconds of
# keyboard inactivity. Set to zero to never stop blinking.
cursor_blink_interval      0.5
cursor_stop_blinking_after 15.0

# }}}


# ┏━┓┏━╸┏━┓┏━┓╻  ╻  ┏┓ ┏━┓┏━╸╻┏
# ┗━┓┃  ┣┳┛┃ ┃┃  ┃  ┣┻┓┣━┫┃  ┣┻┓
# ┗━┛┗━╸╹┗╸┗━┛┗━╸┗━╸┗━┛╹ ╹┗━╸╹ ╹
# Scrollback {{{

# Number of lines of history to keep in memory for scrolling back. Memory is
# allocated on demand. Negative numbers are (effectively) infinite scrollback.
# Note that using very large scrollback is not recommended as it can slow down
# resizing of the terminal and also use large amounts of RAM.
scrollback_lines 10000

# Program with which to view scrollback in a new window. The scrollback buffer
# is passed as STDIN to this program. If you change it, make sure the program
# you use can handle ANSI escape sequences for colors and text formatting.
# INPUT_LINE_NUMBER in the command line above will be replaced by an integer
# representing which line should be at the top of the screen.
# scrollback_pager less --chop-long-lines --RAW-CONTROL-CHARS +INPUT_LINE_NUMBER
scrollback_pager nvim +"source $HOME/.config/kitty/vi-mode.lua"

# Separate scrollback history size, used only for browsing the scrollback buffer
# (in MB). This separate buffer is not available for interactive scrolling but
# will be piped to the pager program when viewing scrollback buffer in a
# separate window. The current implementation stores one character in 4 bytes,
# so approximatively 2500 lines per megabyte at 100 chars per line. A value of
# zero or less disables this feature. The maximum allowed size is 4GB.
scrollback_pager_history_size 0

# Modify the amount scrolled by the mouse wheel. Note this is only used for low
# precision scrolling devices, not for high precision scrolling on platforms
# such as macOS and Wayland. Use negative numbers to change scroll direction.
wheel_scroll_multiplier 5.0

# Modify the amount scrolled by a touchpad. Note this is only used for high
# precision scrolling devices on platforms such as macOS and Wayland. Use
# negative numbers to change scroll direction.
touch_scroll_multiplier 1.0

# }}}


# ┏┳┓┏━┓╻ ╻┏━┓┏━╸
# ┃┃┃┃ ┃┃ ┃┗━┓┣╸
# ╹ ╹┗━┛┗━┛┗━┛┗━╸
# Mouse {{{

# The color and style for highlighting URLs on mouse-over. url_style can be one
# of: none, single, double, curly
url_color #0087BD
url_style curly

# The program with which to open URLs that are clicked on. The special value
# default means to use the operating system's default URL handler.
open_url_with default

# Copy to clipboard on select. With this enabled, simply selecting text with the
# mouse will cause the text to be copied to clipboard. Useful on platforms such
# as macOS that do not have the concept of primary selections. Note that this is
# a security risk, as all programs, including websites open in your browser can
# read the contents of the clipboard.
copy_on_select no

# Characters considered part of a word when double clicking. In addition to
# these characters any character that is marked as an alpha-numeric character in
# the unicode database will be matched.
select_by_word_characters :@-./_~?&=%+#

# The interval between successive clicks to detect double/triple clicks (in
# seconds). Negative numbers will use the system default instead, if available,
# or fallback to 0.5.
click_interval -1.0

# Hide mouse cursor after the specified number of seconds of the mouse not being
# used. Set to zero to disable mouse cursor hiding.
mouse_hide_wait 3.0

# Set the active window to the window under the mouse when moving the mouse
# around
focus_follows_mouse no

# }}}


# ┏━┓┏━╸┏━┓┏━╸┏━┓┏━┓┏┳┓┏━┓┏┓╻┏━╸┏━╸   ╺┳╸╻ ╻┏┓╻╻┏┓╻┏━╸
# ┣━┛┣╸ ┣┳┛┣╸ ┃ ┃┣┳┛┃┃┃┣━┫┃┗┫┃  ┣╸     ┃ ┃ ┃┃┗┫┃┃┗┫┃╺┓
# ╹  ┗━╸╹┗╸╹  ┗━┛╹┗╸╹ ╹╹ ╹╹ ╹┗━╸┗━╸    ╹ ┗━┛╹ ╹╹╹ ╹┗━┛
# Performance tuning {{{

# Delay (in milliseconds) between screen updates. Decreasing it, increases
# frames-per-second (FPS) at the cost of more CPU usage. The default value
# yields ~100 FPS which is more than sufficient for most uses. Note that to
# actually achieve 100 FPS you have to either set sync_to_monitor to no or use a
# monitor with a high refresh rate.
repaint_delay 10

# Delay (in milliseconds) before input from the program running in the terminal
# is processed. Note that decreasing it will increase responsiveness, but also
# increase CPU usage and might cause flicker in full screen programs that redraw
# the entire screen on each loop, because kitty is so fast that partial screen
# updates will be drawn.
input_delay 3

# Sync screen updates to the refresh rate of the monitor. This prevents tearing
# (https://en.wikipedia.org/wiki/Screen_tearing) when scrolling. However, it
# limits the rendering speed to the refresh rate of your monitor. With a very
# high speed mouse/high keyboard repeat rate, you may notice some slight input
# latency. If so, set this to no.
sync_to_monitor yes

# }}}


# ╺┳╸┏━╸┏━┓┏┳┓╻┏┓╻┏━┓╻     ┏┓ ┏━╸╻  ╻
#  ┃ ┣╸ ┣┳┛┃┃┃┃┃┗┫┣━┫┃     ┣┻┓┣╸ ┃  ┃
#  ╹ ┗━╸╹┗╸╹ ╹╹╹ ╹╹ ╹┗━╸   ┗━┛┗━╸┗━╸┗━╸
# Terminal bell {{{

# Enable/disable the audio bell. Useful in environments that require silence.
enable_audio_bell yes

# Visual bell duration. Flash the screen when a bell occurs for the specified
# number of seconds. Set to zero to disable.
visual_bell_duration 0.0

# Request window attention on bell. Makes the dock icon bounce on macOS or the
# taskbar flash on linux.
window_alert_on_bell yes

# Show a bell symbol on the tab if a bell occurs in one of the windows in the
# tab and the window is not the currently focused window
bell_on_tab yes

# }}}


# ╻ ╻╻┏┓╻╺┳┓┏━┓╻ ╻   ╻  ┏━┓╻ ╻┏━┓╻ ╻╺┳╸
# ┃╻┃┃┃┗┫ ┃┃┃ ┃┃╻┃   ┃  ┣━┫┗┳┛┃ ┃┃ ┃ ┃
# ┗┻┛╹╹ ╹╺┻┛┗━┛┗┻┛   ┗━╸╹ ╹ ╹ ┗━┛┗━┛ ╹
# Window layout {{{

# If enabled, the window size will be remembered so that new instances of kitty
# will have the same size as the previous instance. If disabled, the window will
# initially have size configured by initial_window_width/height, in pixels. You
# can use a suffix of "c" on the width/height values to have them interpreted as
# number of cells instead of pixels.
remember_window_size  yes
initial_window_width  640
initial_window_height 400

# The enabled window layouts. A comma separated list of layout names. The
# special value all means all layouts. The first listed layout will be used as
# the startup layout. For a list of available layouts, see the
# https://sw.kovidgoyal.net/kitty/index.html#layouts.
enabled_layouts grid, tall, fat, stack, horizontal, vertical

# The step size (in units of cell width/cell height) to use when resizing
# windows. The cells value is used for horizontal resizing and the lines value
# for vertical resizing.
window_resize_step_cells 2
window_resize_step_lines 2

# The width (in pts) of window borders. Will be rounded to the nearest number of
# pixels based on screen resolution. Note that borders are displayed only when
# more than one window is visible. They are meant to separate multiple windows.
window_border_width 1

# Draw only the minimum borders needed. This means that only the minimum needed
# borders for inactive windows are drawn. That is only the borders that separate
# the inactive window from a neighbor. Note that setting a non-zero window
# margin overrides this and causes all borders to be drawn.
draw_minimal_borders yes

# The window margin (in pts) (blank area outside the border)
window_margin_width 0

# The window margin (in pts) to use when only a single window is visible.
# Negative values will cause the value of window_margin_width to be used
# instead.
single_window_margin_width -1000.0

# The window padding (in pts) (blank area between the text and the window
# border)
window_padding_width 10

# Fade the text in inactive windows by the specified amount (a number between
# zero and one, with zero being fully faded).
inactive_text_alpha 1.0

# Hide the window decorations (title-bar and window borders). Whether this works
# and exactly what effect it has depends on the window manager/operating system.
hide_window_decorations titlebar-only

# }}}


# ╺┳╸┏━┓┏┓    ┏┓ ┏━┓┏━┓
#  ┃ ┣━┫┣┻┓   ┣┻┓┣━┫┣┳┛
#  ╹ ╹ ╹┗━┛   ┗━┛╹ ╹╹┗╸
# Tab bar {{{

# Which edge to show the tab bar on, top or bottom
tab_bar_edge bottom

# The margin to the left and right of the tab bar (in pts)
tab_bar_margin_width 10

# The tab bar style, can be one of: fade, separator or hidden. In the fade
# style, each tab's edges fade into the background color, in the separator
# style, tabs are separated by a configurable separator.
tab_bar_style slant

# Control how each tab fades into the background when using fade for the
# tab_bar_style. Each number is an alpha (between zero and one) that controls
# how much the corresponding cell fades into the background, with zero being no
# fade and one being full fade. You can change the number of cells used by
# adding/removing entries to this list.
tab_fade 0.25 0.5 0.75 1

# The separator between tabs in the tab bar when using separator as the
# tab_bar_style.
tab_separator ""

tab_activity_symbol ""

# A template to render the tab title. The default just renders the title. If you
# wish to include the tab-index as well, use something like: {index}: {title}.
# Useful if you have shortcuts mapped for goto_tab N.
# tab_title_template {index}〉{title}

# TODO For more customization use the function draw_tab. Here are some examples:
# https://github.com/kovidgoyal/kitty/discussions/4447
tab_title_template "{fmt.fg._33394f}• {fmt.fg.tab}{title}"
active_tab_title_template "{fmt.fg._24ddb2}• {fmt.fg.tab}{title}"

# }}}


# ┏━╸┏━┓╻  ┏━┓┏━┓   ┏━┓┏━╸╻ ╻┏━╸┏┳┓┏━╸
# ┃  ┃ ┃┃  ┃ ┃┣┳┛   ┗━┓┃  ┣━┫┣╸ ┃┃┃┣╸
# ┗━╸┗━┛┗━╸┗━┛╹┗╸   ┗━┛┗━╸╹ ╹┗━╸╹ ╹┗━╸
# Color scheme {{{

# The opacity of the background. A number between 0 and 1, where 1 is opaque and
# 0 is fully transparent. This will only work if supported by the OS (for
# instance, when using a compositor under X11). Note that it only sets the
# default background color's opacity. This is so that things like the status bar
# in vim, powerline prompts, etc. still look good. But it means that if you use
# a color theme with a background color in your editor, it will not be rendered
# as transparent. Instead you should change the default background color in your
# kitty config and not use a background color in the editor color scheme. Or use
# the escape codes to set the terminals default colors in a shell script to
# launch your editor. Be aware that using a value less than 1.0 is a (possibly
# significant) performance hit. If you want to dynamically change transparency
# of windows set dynamic_background_opacity to yes (this is off by default as it
# has a performance cost)
background_opacity         1.0
dynamic_background_opacity no

# How much to dim text that has the DIM/FAINT attribute set. One means no
# dimming and zero means fully dimmed (i.e. invisible).
dim_opacity 0.75

# The 16 terminal colors. There are 8 basic colors, each color has a dull and
# bright version. You can also set the remaining colors from the 256 color table
# as color16 to color255.

# Default Theme
include debussy-theme.conf

# }}}


# ┏━┓╺┳┓╻ ╻┏━┓┏┓╻┏━╸┏━╸╺┳┓
# ┣━┫ ┃┃┃┏┛┣━┫┃┗┫┃  ┣╸  ┃┃
# ╹ ╹╺┻┛┗┛ ╹ ╹╹ ╹┗━╸┗━╸╺┻┛
# Advanced {{{

# The shell program to execute. The default value of . means to use whatever
# shell is set as the default shell for the current user. Note that on macOS if
# you change this, you might need to add --login to ensure that the shell starts
# in interactive mode and reads its startup rc files.
shell .

# The console editor to use when editing the kitty config file or similar tasks.
# A value of . means to use the environment variable EDITOR. Note that this
# environment variable has to be set not just in your shell startup scripts but
# system-wide, otherwise kitty will not see it.
editor .

# Close the window when the child process (shell) exits. If no (the default),
# the terminal will remain open when the child exits as long as there are still
# processes outputting to the terminal (for example disowned or backgrounded
# processes). If yes, the window will close as soon as the child process exits.
# Note that setting it to yes means that any background processes still using
# the terminal can fail silently because their stdout/stderr/stdin no longer
# work.
close_on_child_death no

# Allow other programs to control kitty. If you turn this on other programs can
# control all aspects of kitty, including sending text to kitty windows, opening
# new windows, closing windows, reading the content of windows, etc. Note that
# this even works over ssh connections.
allow_remote_control yes
# NOTE also setting this as a CLI option in the `macos-launch-services-cmdline`
# file as a workaround for macOS, because with the settings below, it ends up
# appending the PID to the socket name anyway 
listen_on unix:/tmp/mykitty

# env

# Specify environment variables to set in all child processes. Note
# that environment variables are expanded recursively, so if you
# use:

#     env MYVAR1=a
#     env MYVAR2=${MYVAR1}/${HOME}/b

# The value of MYVAR2 will be a/<path to home directory>/b.

# Path to a session file to use for all kitty instances. Can be overridden by
# using the kitty --session command line option for individual instances. See
# https://sw.kovidgoyal.net/kitty/index.html#sessions in the kitty documentation
# for details. Note that relative paths are interpreted with respect to the
# kitty config directory. Environment variables in the path are expanded.
# startup_session $HOME/Google Drive/prefs/kitty/default-session.conf

# Allow programs running in kitty to read and write from the clipboard. You can
# control exactly which actions are allowed. The set of possible actions is:
# write-clipboard read-clipboard write- primary read-primary The default is to
# allow writing to the clipboard and primary selection. Note that enabling the
# read functionality is a security risk as it means that any program, even one
# running on a remote server via SSH can read your clipboard.
clipboard_control write-clipboard write-primary

# The value of the TERM environment variable to set. Changing this can break
# many terminal programs, only change it if you know what you are doing, not
# because you read some advice on Stack Overflow to change it. The TERM variable
# if used by various programs to get information about the capabilities and
# behavior of the terminal. If you change it, depending on what programs you
# run, and how different the terminal you are changing it to is, various things
# from key-presses, to colors, to various advanced features may not work.
term xterm-kitty

# }}}


# ┏━┓┏━┓   ┏━┓┏━┓┏━╸┏━╸╻┏━╸╻┏━╸   ╺┳╸╻ ╻┏━╸┏━┓╻┏ ┏━┓
# ┃ ┃┗━┓   ┗━┓┣━┛┣╸ ┃  ┃┣╸ ┃┃      ┃ ┃╻┃┣╸ ┣━┫┣┻┓┗━┓
# ┗━┛┗━┛   ┗━┛╹  ┗━╸┗━╸╹╹  ╹┗━╸    ╹ ┗┻┛┗━╸╹ ╹╹ ╹┗━┛
# OS specific tweaks {{{

# Use the option key as an alt key. With this set to no, kitty will use the
# macOS native Option+Key = unicode character behavior. This will break any
# Alt+key keyboard shortcuts in your terminal programs, but you can use the
# macOS unicode input technique.
macos_option_as_alt yes

# Hide the kitty window from running tasks (Option+Tab) on macOS.
macos_hide_from_tasks no

# Have kitty quit when all the top-level windows are closed. By default, kitty
# will stay running, even with no open windows, as is the expected behavior on
# macOS.
macos_quit_when_last_window_closed no

# Disable this if you want kitty top-level (OS) windows to not be resizable on
# macOS.
macos_window_resizable yes

# Draw an extra border around the font with the given width, to increase
# legibility at small font sizes. For example, a value of 0.75 will result in
# rendering that looks similar to sub-pixel antialiasing at common font sizes.
macos_thicken_font 0

# Use the traditional full-screen transition, that is faster, but less pretty.
macos_traditional_fullscreen no

# Enable/disable custom mouse cursor for macOS that is easier to see on both
# light and dark backgrounds. WARNING: this might make your mouse cursor
# invisible on dual GPU machines.
macos_custom_beam_cursor no
# }}}
