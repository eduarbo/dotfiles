#!/usr/bin/env zsh
source ${0:A:h}/../../deploy
source env.bash

# TODO Install latest stable node version to be set as global
install() {
  [[ $(_os) == macos ]] && brew install node
}

link() {
  # NOTE plugins extend the commands available for `nodenv`
  local NODENV_PLUGINS=$NODENV_ROOT/plugins

  _ensure_repo nodenv/nodenv                  $NODENV_ROOT

  # allow me to install virtually any version of Node
  _ensure_repo nodenv/node-build              $NODENV_PLUGINS/node-build

  # automatically install npm packages every time you install a new version of Node
  _ensure_repo nodenv/nodenv-default-packages $NODENV_PLUGINS/nodenv-default-packages

  # installer/updater and doctor scripts for nodenv
  _ensure_repo nodenv/nodenv-installer        $NODENV_PLUGINS/nodenv-installer

  # never run `nodenv rehash` again
  _ensure_repo nodenv/nodenv-package-rehash   $NODENV_PLUGINS/nodenv-package-rehash

  # detects the Node version based on the engines field of the current tree's package.json file
  _ensure_repo nodenv/nodenv-package-json-engine $NODENV_PLUGINS/nodenv-package-json-engine

  # List of default packages that will be installed on every new version of Node
  mklink default-packages "$NODENV_ROOT/default-packages"
  mklink prettierrc.js "$HOME/.prettierrc.js"
}

update() {
  # Install latest node version

  nodenv update
  LATEST_NODE_VERSION=$(nodenv install -l | grep -E "^[0-9]+(\.[0-9]+){2}" | sort -V | tail -1)
  echo "Install latest node version: v$LATEST_NODE_VERSION"
  nodenv install $LATEST_NODE_VERSION

  # List of orphan node versions

  repos_dir=($HOME/{work,dev})

  find_node_versions() {
    find $repos_dir -type f -name
  }

  fd_node_versions() {
    fd -H .node-version $repos_dir -x cat {}
  }

  INSTALLED_NODE_VERSIONS=$(nodenv versions --bare)
  USED_NODE_VERSIONS=$((fd_node_versions 2>/dev/null || find_node_versions 2>/dev/null) | sort -uV)
  ORPHAN_NODE_VERSIONS=$( \
    comm -23 \
    <(nodenv versions --bare) \
    <((fd_node_versions 2>/dev/null || find_node_versions 2>/dev/null) | sort -uV) \
    )
  COUNT_ORPHAN_NODE_VERSIONS=$(echo $ORPHAN_NODE_VERSIONS | awk NF | wc -l)
  if [[ $COUNT_ORPHAN_NODE_VERSIONS -ne 0 ]]; then
    echo-note "Orphan node versions"
    echo $ORPHAN_NODE_VERSIONS
  fi

  # TODO ask to remove orphan node versions
}

clean() {
  rm -rfv $NODENV_ROOT "$HOME/.prettierrc.js"
}

init "$@"
